{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, useCallback, memo } from 'react'; // import Head from 'next/head';\n// import AppLayout from '../components/AppLayout';\n\nimport { Form, Input, Checkbox, Button } from 'antd';\nimport { SIGN_UP_REQUEST } from '../reducers/user';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Router from 'next/router';\n\nvar TextInput = function TextInput(_ref) {\n  var value = _ref.value;\n  return __jsx(\"div\", null, value);\n};\n\n// custom hook -!\nexport var useInput = function useInput() {\n  var initValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n  var _useState = useState(initValue),\n      value = _useState[0],\n      setter = _useState[1];\n\n  var handler = useCallback(function (e) {\n    setter(e.target.value);\n  }, []);\n  return [value, handler];\n}; // 커스텀 훅을 만들 수 있음. 중복되는 것들!\n\nvar SingUp = function SingUp() {\n  var _useState2 = useState(''),\n      passwordCheck = _useState2[0],\n      setPasswordCheck = _useState2[1];\n\n  var _useState3 = useState(false),\n      term = _useState3[0],\n      setTerm = _useState3[1];\n\n  var _useState4 = useState(''),\n      passwordError = _useState4[0],\n      setPasswordError = _useState4[1];\n\n  var _useState5 = useState(''),\n      termError = _useState5[0],\n      setTermError = _useState5[1]; // 커스텀 훅 적용\n\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      id = _useInput2[0],\n      onChangeId = _useInput2[1];\n\n  var _useInput3 = useInput(''),\n      _useInput4 = _slicedToArray(_useInput3, 2),\n      nick = _useInput4[0],\n      onChangeNick = _useInput4[1];\n\n  var _useInput5 = useInput(''),\n      _useInput6 = _slicedToArray(_useInput5, 2),\n      password = _useInput6[0],\n      onChangePassword = _useInput6[1]; // 커스텀 훅 적용\n\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      isSigningUp = _useSelector.isSigningUp,\n      me = _useSelector.me;\n\n  useEffect(function () {\n    if (me) {\n      // 로그인 했으니 메인페이지로 이동\n      Router.push('/');\n    }\n  }, [me && me.id]);\n  var dispatch = useDispatch(); // FORM은 REACT의 USESTATE를 쓰고 REDUX에서는 최종본을 모아서 넣음! 이렇게 하면 STATE를 둘 다 쓰는 셈이 된다.\n\n  var onSubmit = useCallback(function (e) {\n    e.preventDefault();\n\n    if (password !== passwordCheck) {\n      return setPasswordError(true);\n    }\n\n    setTermError(!term);\n    dispatch({\n      type: SIGN_UP_REQUEST,\n      data: {\n        userId: id,\n        nickname: nick,\n        password: password\n      }\n    });\n  }, [id, nick, password, passwordCheck, term]);\n  var onChangePasswordCheck = useCallback(function (e) {\n    setPasswordError(e.target.value !== password);\n    setPasswordCheck(e.target.value);\n  }, [password]);\n  var onChangeTerm = useCallback(function (e) {\n    setTerm(e.target.checked);\n  }, []);\n  useEffect(function () {\n    term && setTermError(false);\n  }, [term]);\n  return __jsx(React.Fragment, null, __jsx(Form, {\n    onSubmit: onSubmit,\n    style: {\n      padding: 10\n    }\n  }, __jsx(\"div\", null, __jsx(\"label\", {\n    htmlFor: \"user-id\"\n  }, \"USER ID\"), __jsx(\"br\", null), __jsx(Input, {\n    name: \"user-id\",\n    value: id,\n    required: true,\n    onChange: onChangeId\n  })), __jsx(\"div\", null, __jsx(\"label\", {\n    htmlFor: \"user-nick\"\n  }, \"USER Nickname\"), __jsx(\"br\", null), __jsx(Input, {\n    name: \"user-nick\",\n    value: nick,\n    required: true,\n    onChange: onChangeNick\n  })), __jsx(\"div\", null, __jsx(\"label\", {\n    htmlFor: \"user-password\"\n  }, \"USER Password\"), __jsx(\"br\", null), __jsx(Input, {\n    name: \"user-password\",\n    type: \"password\",\n    value: password,\n    required: true,\n    onChange: onChangePassword\n  })), __jsx(\"div\", null, __jsx(\"label\", {\n    htmlFor: \"user-password-check\"\n  }, \"USER Password check\"), __jsx(\"br\", null), __jsx(Input, {\n    name: \"user-password-check\",\n    type: \"password\",\n    value: passwordCheck,\n    required: true,\n    onChange: onChangePasswordCheck\n  }), passwordError && __jsx(\"div\", {\n    style: {\n      color: 'red'\n    }\n  }, \" \\uBE44\\uBC00\\uBC88\\uD638\\uAC00 \\uC77C\\uCE58\\uD558\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4 \")), __jsx(\"div\", {\n    style: {\n      marginTop: 10\n    }\n  }, __jsx(Checkbox, {\n    name: \"user-term\",\n    checked: term,\n    onChange: onChangeTerm\n  }, \"ok?\"), termError && __jsx(\"div\", {\n    style: {\n      color: 'red'\n    }\n  }, \"\\uC57D\\uAD00\\uC5D0 \\uB3D9\\uC758\\uD558\\uC154\\uC57C \\uD569\\uB2C8\\uB2E4\")), __jsx(\"div\", {\n    style: {\n      marginTop: 10\n    }\n  }, __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: isSigningUp\n  }, \"SIGN UP\"))));\n};\n\nexport default SingUp;","map":{"version":3,"sources":["C:/project/nodebird/front/pages/signup.js"],"names":["React","useState","useEffect","useCallback","memo","Form","Input","Checkbox","Button","SIGN_UP_REQUEST","useDispatch","useSelector","Router","TextInput","value","useInput","initValue","setter","handler","e","target","SingUp","passwordCheck","setPasswordCheck","term","setTerm","passwordError","setPasswordError","termError","setTermError","id","onChangeId","nick","onChangeNick","password","onChangePassword","state","user","isSigningUp","me","push","dispatch","onSubmit","preventDefault","type","data","userId","nickname","onChangePasswordCheck","onChangeTerm","checked","padding","color","marginTop"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback, memo } from 'react';\r\n// import Head from 'next/head';\r\n// import AppLayout from '../components/AppLayout';\r\nimport { Form, Input, Checkbox, Button } from 'antd'\r\nimport PropTypes from 'prop-types';\r\nimport { SIGN_UP_REQUEST } from '../reducers/user';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Router from 'next/router';\r\n\r\nconst TextInput = ({ value }) => (\r\n    <div>{value}</div>\r\n);\r\n\r\nTextInput.propTypes = {\r\n    value: PropTypes.string,\r\n};\r\n\r\n// custom hook -!\r\nexport const useInput = (initValue = null) => {\r\n    const [value, setter] = useState(initValue);\r\n    const handler = useCallback((e) => {\r\n        setter(e.target.value);\r\n    }, []);\r\n    return [value, handler];\r\n};\r\n// 커스텀 훅을 만들 수 있음. 중복되는 것들!\r\n\r\nconst SingUp = () => {\r\n    const [passwordCheck, setPasswordCheck] = useState('');\r\n    const [term, setTerm] = useState(false);\r\n    const [passwordError, setPasswordError] = useState('');\r\n    const [termError, setTermError] = useState('');\r\n    // 커스텀 훅 적용\r\n    const [id, onChangeId] = useInput('');\r\n    const [nick, onChangeNick] = useInput('');\r\n    const [password, onChangePassword] = useInput('');\r\n    // 커스텀 훅 적용\r\n\r\n    const { isSigningUp, me } = useSelector(state => state.user)\r\n\r\n    useEffect(() => {\r\n        if (me) {\r\n            // 로그인 했으니 메인페이지로 이동\r\n            Router.push('/');\r\n        }\r\n    }, [me && me.id]);\r\n\r\n    const dispatch = useDispatch();\r\n    // FORM은 REACT의 USESTATE를 쓰고 REDUX에서는 최종본을 모아서 넣음! 이렇게 하면 STATE를 둘 다 쓰는 셈이 된다.\r\n\r\n    const onSubmit = useCallback((e) => {\r\n        e.preventDefault();\r\n        if(password !== passwordCheck){\r\n            return setPasswordError(true);\r\n        }\r\n        setTermError(!term);\r\n        dispatch({\r\n            type : SIGN_UP_REQUEST,\r\n            data : {\r\n                userId : id,\r\n                nickname : nick,\r\n                password\r\n            }\r\n        });\r\n    }, [id, nick, password, passwordCheck, term]);\r\n\r\n    const onChangePasswordCheck = useCallback((e) => {\r\n        setPasswordError(e.target.value !== password);\r\n        setPasswordCheck(e.target.value);\r\n    }, [password]);\r\n\r\n    const onChangeTerm = useCallback((e) => {\r\n        setTerm(e.target.checked);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        term && setTermError(false);\r\n    }, [term]);\r\n\r\n    return(\r\n        <>\r\n            <Form onSubmit = {onSubmit} style={{padding : 10}}>\r\n                <div>\r\n                    <label htmlFor=\"user-id\">USER ID</label>\r\n                    <br/>\r\n                    <Input name=\"user-id\" value={id} required onChange={onChangeId}/>\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"user-nick\">USER Nickname</label>\r\n                    <br/>\r\n                    <Input name=\"user-nick\" value={nick} required onChange={onChangeNick}/>\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"user-password\">USER Password</label>\r\n                    <br/>\r\n                    <Input name=\"user-password\" type=\"password\" value={password} required onChange = {onChangePassword}/>\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"user-password-check\">USER Password check</label>\r\n                    <br/>\r\n                    <Input name=\"user-password-check\" type=\"password\"  value={passwordCheck} required onChange = {onChangePasswordCheck}/>\r\n                    {passwordError && <div style={{color : 'red'}}> 비밀번호가 일치하지 않습니다 </div>}\r\n                </div>\r\n                <div style={{marginTop : 10}}>\r\n                    <Checkbox name=\"user-term\" checked={term} onChange={onChangeTerm}>ok?</Checkbox>\r\n                    {termError && <div style={{color : 'red'}}>약관에 동의하셔야 합니다</div>}\r\n                </div>\r\n                <div style={{marginTop : 10}}>\r\n                    <Button type=\"primary\" htmlType=\"submit\" loading = {isSigningUp}\r\n                    >SIGN UP</Button>\r\n                </div>\r\n            </Form>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SingUp;"]},"metadata":{},"sourceType":"module"}