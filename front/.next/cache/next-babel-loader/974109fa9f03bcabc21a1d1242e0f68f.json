{"ast":null,"code":"import { all, fork, takeLatest, delay, put, call } from 'redux-saga/effects';\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE, LOAD_MAIN_POST_SUCCESS, LOAD_MAIN_POST_FAILURE, LOAD_MAIN_POST_REQUEST, LOAD_HASHTAG_POSTS_SUCCESS, LOAD_HASHTAG_POSTS_FAILURE, LOAD_HASHTAG_POSTS_REQUEST, LOAD_USER_POST_SUCCESS, LOAD_USER_POST_FAILURE, LOAD_USER_POST_REQUEST, LOAD_COMMENT_SUCCESS, LOAD_COMMENT_FAILURE, LOAD_COMMENT_REQUEST, UPLOAD_IMAGE_SUCCESS, UPLOAD_IMAGE_FAILURE, UPLOAD_IMAGE_REQUEST, LIKE_POST_SUCCESS, LIKE_POST_FAILURE, LIKE_POST_REQUEST, UNLIKE_POST_SUCCESS, UNLIKE_POST_FAILURE, UNLIKE_POST_REQUEST, RETWEET_SUCCESS, RETWEET_FAILURE, RETWEET_REQUEST } from '../reducers/post';\nimport axios from 'axios';\n\nfunction addPostAPI(postData) {\n  return axios.post('/post', postData, {\n    withCredentials: true\n  });\n}\n\nfunction* addPost(action) {\n  try {\n    const result = yield call(addPostAPI, action.data);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: ADD_POST_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction loadMainPostsAPI() {\n  return axios.get('/posts');\n}\n\nfunction* loadMainPosts() {\n  try {\n    const result = yield call(loadMainPostsAPI);\n    yield put({\n      type: LOAD_MAIN_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: LOAD_MAIN_POST_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchLoadMainPosts() {\n  yield takeLatest(LOAD_MAIN_POST_REQUEST, loadMainPosts);\n}\n\nfunction loadHashtagPostsAPI(tag) {\n  return axios.get(`/hashtag/${tag}`);\n}\n\nfunction* loadHashtagPosts(action) {\n  try {\n    const result = yield call(loadHashtagPostsAPI, action.data);\n    yield put({\n      type: LOAD_HASHTAG_POSTS_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: LOAD_HASHTAG_POSTS_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchLoadHashtagPosts() {\n  yield takeLatest(LOAD_HASHTAG_POSTS_REQUEST, loadHashtagPosts);\n}\n\nfunction loadUserPostsAPI(id) {\n  return axios.get(`/user/${id}/posts`);\n}\n\nfunction* loadUserPosts(action) {\n  try {\n    const result = yield call(loadUserPostsAPI, action.data);\n    yield put({\n      type: LOAD_USER_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: LOAD_USER_POST_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchLoadUserPosts() {\n  yield takeLatest(LOAD_USER_POST_REQUEST, loadUserPosts);\n}\n\nfunction addCommentAPI(data) {\n  return axios.post(`/post/${data.postId}/comment`, {\n    content: data.content\n  }, {\n    withCredentials: true\n  });\n}\n\nfunction* addComment(action) {\n  try {\n    const result = yield call(addCommentAPI, action.data);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: {\n        postId: action.data.postId,\n        comment: result.data\n      }\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nfunction loadCommentsAPI(postId) {\n  return axios.get(`/post/${postId}/comments`);\n}\n\nfunction* loadComments(action) {\n  try {\n    const result = yield call(loadCommentsAPI, action.data);\n    yield put({\n      type: LOAD_COMMENT_SUCCESS,\n      data: {\n        postId: action.data,\n        comments: result.data\n      }\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: LOAD_COMMENT_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchLoadComments() {\n  yield takeLatest(LOAD_COMMENT_REQUEST, loadComments);\n}\n\nfunction uploadImagesAPI(formData) {\n  return axios.post('post/images', formData, {\n    withCredentials: true\n  });\n}\n\nfunction* uploadImages(action) {\n  try {\n    const result = yield call(uploadImagesAPI, action.data);\n    yield put({\n      type: UPLOAD_IMAGE_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: UPLOAD_IMAGE_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchUploadImages() {\n  yield takeLatest(UPLOAD_IMAGE_REQUEST, uploadImages);\n}\n\nfunction likePostAPI(postId) {\n  return axios.post(`/post/${postId}/like`, {}, {\n    withCredentials: true\n  });\n}\n\nfunction* likePost(action) {\n  try {\n    const result = yield call(likePostAPI, action.data);\n    yield put({\n      type: LIKE_POST_SUCCESS,\n      data: {\n        postId: action.data,\n        userId: result.data.userId\n      }\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: LIKE_POST_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchLikePost() {\n  yield takeLatest(LIKE_POST_REQUEST, likePost);\n}\n\nfunction unlikePostAPI(postId) {\n  return axios.delete(`/post/${postId}/like`, {\n    withCredentials: true\n  });\n}\n\nfunction* unlikePost(action) {\n  try {\n    const result = yield call(unlikePostAPI, action.data);\n    yield put({\n      type: UNLIKE_POST_SUCCESS,\n      data: {\n        postId: action.data,\n        userId: result.data.userId\n      }\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: UNLIKE_POST_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchUnlikePost() {\n  yield takeLatest(UNLIKE_POST_REQUEST, unlikePost);\n}\n\nfunction retweetAPI(postId) {\n  return axios.post(`/post/${postId}/retweet`, {\n    withCredentials: true\n  });\n}\n\nfunction* retweet(action) {\n  try {\n    const result = yield call(retweetAPI, action.data);\n    yield put({\n      type: RETWEET_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: RETWEET_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchRetweet() {\n  yield takeLatest(RETWEET_REQUEST, retweet);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchLoadMainPosts), fork(watchAddComment), fork(watchLoadComments), fork(watchLoadHashtagPosts), fork(watchLoadUserPosts), fork(watchUploadImages), fork(watchLikePost), fork(watchUnlikePost), fork(watchRetweet)]);\n}","map":{"version":3,"sources":["C:/project/nodebird/front/sagas/post.js"],"names":["all","fork","takeLatest","delay","put","call","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","LOAD_MAIN_POST_SUCCESS","LOAD_MAIN_POST_FAILURE","LOAD_MAIN_POST_REQUEST","LOAD_HASHTAG_POSTS_SUCCESS","LOAD_HASHTAG_POSTS_FAILURE","LOAD_HASHTAG_POSTS_REQUEST","LOAD_USER_POST_SUCCESS","LOAD_USER_POST_FAILURE","LOAD_USER_POST_REQUEST","LOAD_COMMENT_SUCCESS","LOAD_COMMENT_FAILURE","LOAD_COMMENT_REQUEST","UPLOAD_IMAGE_SUCCESS","UPLOAD_IMAGE_FAILURE","UPLOAD_IMAGE_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","LIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","UNLIKE_POST_REQUEST","RETWEET_SUCCESS","RETWEET_FAILURE","RETWEET_REQUEST","axios","addPostAPI","postData","post","withCredentials","addPost","action","result","data","type","e","console","error","watchAddPost","loadMainPostsAPI","get","loadMainPosts","watchLoadMainPosts","loadHashtagPostsAPI","tag","loadHashtagPosts","watchLoadHashtagPosts","loadUserPostsAPI","id","loadUserPosts","watchLoadUserPosts","addCommentAPI","postId","content","addComment","comment","watchAddComment","loadCommentsAPI","loadComments","comments","watchLoadComments","uploadImagesAPI","formData","uploadImages","watchUploadImages","likePostAPI","likePost","userId","watchLikePost","unlikePostAPI","delete","unlikePost","watchUnlikePost","retweetAPI","retweet","watchRetweet","postSaga"],"mappings":"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","sourcesContent":["import { all, fork, takeLatest, delay, put, call } from 'redux-saga/effects'\r\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE, LOAD_MAIN_POST_SUCCESS, LOAD_MAIN_POST_FAILURE, LOAD_MAIN_POST_REQUEST, LOAD_HASHTAG_POSTS_SUCCESS, LOAD_HASHTAG_POSTS_FAILURE, LOAD_HASHTAG_POSTS_REQUEST, LOAD_USER_POST_SUCCESS, LOAD_USER_POST_FAILURE, LOAD_USER_POST_REQUEST, LOAD_COMMENT_SUCCESS, LOAD_COMMENT_FAILURE, LOAD_COMMENT_REQUEST, UPLOAD_IMAGE_SUCCESS, UPLOAD_IMAGE_FAILURE, UPLOAD_IMAGE_REQUEST, LIKE_POST_SUCCESS, LIKE_POST_FAILURE, LIKE_POST_REQUEST, UNLIKE_POST_SUCCESS, UNLIKE_POST_FAILURE, UNLIKE_POST_REQUEST, RETWEET_SUCCESS, RETWEET_FAILURE, RETWEET_REQUEST } from '../reducers/post';\r\nimport axios from 'axios';\r\n\r\nfunction addPostAPI(postData){\r\n    return axios.post('/post', postData, {\r\n        withCredentials : true,\r\n    })\r\n}\r\n\r\nfunction* addPost(action){\r\n    try {\r\n        const result = yield call(addPostAPI, action.data);\r\n        yield put({\r\n            type : ADD_POST_SUCCESS,\r\n            data : result.data,\r\n        });\r\n    } catch (e) {\r\n        console.error(e);\r\n        yield put({\r\n            type : ADD_POST_FAILURE,\r\n            error : e,\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchAddPost(){\r\n    yield takeLatest(ADD_POST_REQUEST, addPost);\r\n}\r\n\r\nfunction loadMainPostsAPI(){\r\n    return axios.get('/posts');\r\n}\r\n\r\nfunction* loadMainPosts(){\r\n    try {\r\n        const result = yield call(loadMainPostsAPI);\r\n        yield put({\r\n            type : LOAD_MAIN_POST_SUCCESS,\r\n            data : result.data,\r\n        });\r\n    } catch (e) {\r\n        console.error(e);\r\n        yield put({\r\n            type : LOAD_MAIN_POST_FAILURE,\r\n            error : e,\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchLoadMainPosts(){\r\n    yield takeLatest(LOAD_MAIN_POST_REQUEST, loadMainPosts);\r\n}\r\n\r\nfunction loadHashtagPostsAPI(tag){\r\n    return axios.get(`/hashtag/${tag}`);\r\n}\r\n\r\nfunction* loadHashtagPosts(action){\r\n    try {\r\n        const result = yield call(loadHashtagPostsAPI, action.data);\r\n        yield put({\r\n            type : LOAD_HASHTAG_POSTS_SUCCESS,\r\n            data : result.data,\r\n        });\r\n    } catch (e) {\r\n        console.error(e);\r\n        yield put({\r\n            type : LOAD_HASHTAG_POSTS_FAILURE,\r\n            error : e,\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchLoadHashtagPosts(){\r\n    yield takeLatest(LOAD_HASHTAG_POSTS_REQUEST, loadHashtagPosts);\r\n}\r\n\r\nfunction loadUserPostsAPI(id){\r\n    return axios.get(`/user/${id}/posts`);\r\n}\r\n\r\nfunction* loadUserPosts(action){\r\n    try {\r\n        const result = yield call(loadUserPostsAPI, action.data);\r\n        yield put({\r\n            type : LOAD_USER_POST_SUCCESS,\r\n            data : result.data,\r\n        });\r\n    } catch (e) {\r\n        console.error(e);\r\n        yield put({\r\n            type : LOAD_USER_POST_FAILURE,\r\n            error : e,\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchLoadUserPosts(){\r\n    yield takeLatest(LOAD_USER_POST_REQUEST, loadUserPosts);\r\n}\r\n\r\nfunction addCommentAPI(data){\r\n    return axios.post(`/post/${data.postId}/comment`, { content : data.content }, {\r\n        withCredentials : true,\r\n    });\r\n}\r\n\r\nfunction* addComment(action){\r\n    try {\r\n        const result = yield call(addCommentAPI, action.data);\r\n        yield put({\r\n            type : ADD_COMMENT_SUCCESS,\r\n            data : {\r\n                postId : action.data.postId,\r\n                comment : result.data,\r\n            },\r\n        });\r\n    } catch (e) {\r\n        console.error(e);\r\n        yield put({\r\n            type : ADD_COMMENT_FAILURE,\r\n            error : e,\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchAddComment(){\r\n    yield takeLatest(ADD_COMMENT_REQUEST, addComment);\r\n}\r\n\r\nfunction loadCommentsAPI(postId){\r\n    return axios.get(`/post/${postId}/comments`);\r\n}\r\n\r\nfunction* loadComments(action){\r\n    try {\r\n        const result = yield call(loadCommentsAPI, action.data);\r\n        yield put({\r\n            type : LOAD_COMMENT_SUCCESS,\r\n            data : {\r\n                postId : action.data,\r\n                comments : result.data,\r\n            },\r\n        });\r\n    } catch (e) {\r\n        console.error(e);\r\n        yield put({\r\n            type : LOAD_COMMENT_FAILURE,\r\n            error : e,\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchLoadComments(){\r\n    yield takeLatest(LOAD_COMMENT_REQUEST, loadComments);\r\n}\r\n\r\nfunction uploadImagesAPI(formData){\r\n    return axios.post('post/images', formData, {\r\n        withCredentials : true,\r\n    });\r\n}\r\n\r\nfunction* uploadImages(action){\r\n    try {\r\n        const result = yield call(uploadImagesAPI, action.data);\r\n        yield put({\r\n            type : UPLOAD_IMAGE_SUCCESS,\r\n            data : result.data,\r\n        });\r\n    } catch (e) {\r\n        console.error(e);\r\n        yield put({\r\n            type : UPLOAD_IMAGE_FAILURE,\r\n            error : e,\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchUploadImages(){\r\n    yield takeLatest(UPLOAD_IMAGE_REQUEST, uploadImages);\r\n}\r\n\r\nfunction likePostAPI(postId){\r\n    return axios.post(`/post/${postId}/like`, {}, {\r\n        withCredentials : true,\r\n    });\r\n}\r\n\r\nfunction* likePost(action){\r\n    try {\r\n        const result = yield call(likePostAPI, action.data);\r\n        yield put({\r\n            type : LIKE_POST_SUCCESS,\r\n            data : {\r\n                postId : action.data,\r\n                userId : result.data.userId,\r\n            },\r\n        });\r\n    } catch (e) {\r\n        console.error(e);\r\n        yield put({\r\n            type : LIKE_POST_FAILURE,\r\n            error : e,\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchLikePost(){\r\n    yield takeLatest(LIKE_POST_REQUEST, likePost);\r\n}\r\n\r\nfunction unlikePostAPI(postId){\r\n    return axios.delete(`/post/${postId}/like`, {\r\n        withCredentials : true,\r\n    });\r\n}\r\n\r\nfunction* unlikePost(action){\r\n    try {\r\n        const result = yield call(unlikePostAPI, action.data);\r\n        yield put({\r\n            type : UNLIKE_POST_SUCCESS,\r\n            data : {\r\n                postId : action.data,\r\n                userId : result.data.userId,\r\n            },\r\n        });\r\n    } catch (e) {\r\n        console.error(e);\r\n        yield put({\r\n            type : UNLIKE_POST_FAILURE,\r\n            error : e,\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchUnlikePost(){\r\n    yield takeLatest(UNLIKE_POST_REQUEST, unlikePost);\r\n}\r\n\r\nfunction retweetAPI(postId){\r\n    return axios.post(`/post/${postId}/retweet`, {\r\n        withCredentials : true,\r\n    });\r\n}\r\n\r\nfunction* retweet(action){\r\n    try {\r\n        const result = yield call(retweetAPI, action.data);\r\n        yield put({\r\n            type : RETWEET_SUCCESS,\r\n            data : result.data,\r\n        });\r\n    } catch (e) {\r\n        console.error(e);\r\n        yield put({\r\n            type : RETWEET_FAILURE,\r\n            error : e,\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchRetweet(){\r\n    yield takeLatest(RETWEET_REQUEST, retweet);\r\n}\r\n\r\n\r\n\r\nexport default function* postSaga(){\r\n    yield all ([\r\n        fork(watchAddPost),\r\n        fork(watchLoadMainPosts),\r\n        fork(watchAddComment),\r\n        fork(watchLoadComments),\r\n        fork(watchLoadHashtagPosts),\r\n        fork(watchLoadUserPosts),\r\n        fork(watchUploadImages),\r\n        fork(watchLikePost),\r\n        fork(watchUnlikePost),\r\n        fork(watchRetweet),\r\n    ]);\r\n}"]},"metadata":{},"sourceType":"module"}