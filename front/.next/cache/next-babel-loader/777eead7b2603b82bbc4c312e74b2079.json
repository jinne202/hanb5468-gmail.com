{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\nodebird\\\\front\\\\pages\\\\signup.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, useCallback, memo } from 'react'; // import Head from 'next/head';\n// import AppLayout from '../components/AppLayout';\n\nimport { Form, Input, Checkbox, Button } from 'antd';\nimport PropTypes from 'prop-types'; // import { SIGN_UP_REQUEST } from '../reducers/user';\n// import { useDispatch, useSelector } from 'react-redux';\n// import Router from 'next/router';\n\nconst TextInput = ({\n  value\n}) => __jsx(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}, value);\n\nTextInput.propTypes = {\n  value: PropTypes.string\n}; // custom hook -!\n\nexport const useInput = (initValue = null) => {\n  const {\n    0: value,\n    1: setter\n  } = useState(initValue);\n  const handler = useCallback(e => {\n    setter(e.target.value);\n  }, []);\n  return [value, handler];\n}; // 커스텀 훅을 만들 수 있음. 중복되는 것들!\n\nconst SingUp = () => {\n  const {\n    0: passwordCheck,\n    1: setPasswordCheck\n  } = useState('');\n  const {\n    0: term,\n    1: setTerm\n  } = useState(false);\n  const {\n    0: passwordError,\n    1: setPasswordError\n  } = useState('');\n  const {\n    0: termError,\n    1: setTermError\n  } = useState(''); // 커스텀 훅 적용\n\n  const [id, onChangeId] = useInput('');\n  const [nick, onChangeNick] = useInput('');\n  const [password, onChangePassword] = useInput(''); // 커스텀 훅 적용\n  // const { isSigningUp, me } = useSelector(state => state.user)\n  // useEffect(() => {\n  //     if (me) {\n  //         // 로그인 했으니 메인페이지로 이동\n  //         Router.push('/');\n  //     }\n  // }, [me && me.id]);\n  // const dispatch = useDispatch();\n  // FORM은 REACT의 USESTATE를 쓰고 REDUX에서는 최종본을 모아서 넣음! 이렇게 하면 STATE를 둘 다 쓰는 셈이 된다.\n\n  const onSubmit = useCallback(e => {\n    e.preventDefault();\n\n    if (password !== passwordCheck) {\n      return setPasswordError(true);\n    }\n\n    setTermError(!term); // dispatch({\n    //     type : SIGN_UP_REQUEST,\n    //     data : {\n    //         userId : id,\n    //         password,\n    //         nickname : nick,\n    //     }\n    // });\n\n    console.log({\n      id,\n      nick,\n      password,\n      passwordCheck,\n      term\n    });\n  }, [id, password, passwordCheck, term]);\n  const onChangePasswordCheck = useCallback(e => {\n    setPasswordError(e.target.value !== password);\n    setPasswordCheck(e.target.value);\n  }, [password]);\n  const onChangeTerm = useCallback(e => {\n    setTerm(e.target.checked);\n  }, []);\n  useEffect(() => {\n    term && setTermError(false);\n  }, [term]);\n  return __jsx(React.Fragment, null, __jsx(Form, {\n    onSubmit: onSubmit,\n    style: {\n      padding: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"user-id\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"USER ID\"), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }), __jsx(Input, {\n    name: \"user-id\",\n    value: id,\n    required: true,\n    onChange: onChangeId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"user-nick\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"USER Nickname\"), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }), __jsx(Input, {\n    name: \"user-nick\",\n    value: nick,\n    required: true,\n    onChange: onChangeNick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"user-password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"USER Password\"), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }), __jsx(Input, {\n    name: \"user-password\",\n    type: \"password\",\n    value: password,\n    required: true,\n    onChange: onChangePassword,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"user-password-check\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"USER Password check\"), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }), __jsx(Input, {\n    name: \"user-password-check\",\n    type: \"password\",\n    value: passwordCheck,\n    required: true,\n    onChange: onChangePasswordCheck,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }), passwordError && __jsx(\"div\", {\n    style: {\n      color: 'red'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \" \\uBE44\\uBC00\\uBC88\\uD638\\uAC00 \\uC77C\\uCE58\\uD558\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4 \")), __jsx(\"div\", {\n    style: {\n      marginTop: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, __jsx(Checkbox, {\n    name: \"user-term\",\n    checked: term,\n    onChange: onChangeTerm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"ok?\"), termError && __jsx(\"div\", {\n    style: {\n      color: 'red'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"\\uC57D\\uAD00\\uC5D0 \\uB3D9\\uC758\\uD558\\uC154\\uC57C \\uD569\\uB2C8\\uB2E4\")), __jsx(\"div\", {\n    style: {\n      marginTop: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\" //loading = {isSigningUp}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, \"SIGN UP\"))));\n};\n\nexport default SingUp;","map":{"version":3,"sources":["C:/project/nodebird/front/pages/signup.js"],"names":["React","useState","useEffect","useCallback","memo","Form","Input","Checkbox","Button","PropTypes","TextInput","value","propTypes","string","useInput","initValue","setter","handler","e","target","SingUp","passwordCheck","setPasswordCheck","term","setTerm","passwordError","setPasswordError","termError","setTermError","id","onChangeId","nick","onChangeNick","password","onChangePassword","onSubmit","preventDefault","console","log","onChangePasswordCheck","onChangeTerm","checked","padding","color","marginTop"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback, memo } from 'react';\r\n// import Head from 'next/head';\r\n// import AppLayout from '../components/AppLayout';\r\nimport { Form, Input, Checkbox, Button } from 'antd'\r\nimport PropTypes from 'prop-types';\r\n// import { SIGN_UP_REQUEST } from '../reducers/user';\r\n// import { useDispatch, useSelector } from 'react-redux';\r\n// import Router from 'next/router';\r\n\r\nconst TextInput = ({ value }) => (\r\n    <div>{value}</div>\r\n  );\r\n\r\nTextInput.propTypes = {\r\nvalue: PropTypes.string,\r\n};\r\n\r\n// custom hook -!\r\nexport const useInput = (initValue = null) => {\r\n    const [value, setter] = useState(initValue);\r\n    const handler = useCallback((e) => {\r\n        setter(e.target.value);\r\n    }, []);\r\n    return [value, handler];\r\n};\r\n// 커스텀 훅을 만들 수 있음. 중복되는 것들!\r\n\r\nconst SingUp = () => {\r\n    const [passwordCheck, setPasswordCheck] = useState('');\r\n    const [term, setTerm] = useState(false);\r\n    const [passwordError, setPasswordError] = useState('');\r\n    const [termError, setTermError] = useState('');\r\n    // 커스텀 훅 적용\r\n    const [id, onChangeId] = useInput('');\r\n    const [nick, onChangeNick] = useInput('');\r\n    const [password, onChangePassword] = useInput('');\r\n    // 커스텀 훅 적용\r\n\r\n    // const { isSigningUp, me } = useSelector(state => state.user)\r\n\r\n    // useEffect(() => {\r\n    //     if (me) {\r\n    //         // 로그인 했으니 메인페이지로 이동\r\n    //         Router.push('/');\r\n    //     }\r\n    // }, [me && me.id]);\r\n\r\n    // const dispatch = useDispatch();\r\n    // FORM은 REACT의 USESTATE를 쓰고 REDUX에서는 최종본을 모아서 넣음! 이렇게 하면 STATE를 둘 다 쓰는 셈이 된다.\r\n\r\n    const onSubmit = useCallback((e) => {\r\n        e.preventDefault();\r\n        if(password !== passwordCheck){\r\n            return setPasswordError(true);\r\n        }\r\n        setTermError(!term);\r\n        // dispatch({\r\n        //     type : SIGN_UP_REQUEST,\r\n        //     data : {\r\n        //         userId : id,\r\n        //         password,\r\n        //         nickname : nick,\r\n        //     }\r\n        // });\r\n        console.log({id, nick, password, passwordCheck, term});\r\n    }, [id, password, passwordCheck, term]);\r\n\r\n    const onChangePasswordCheck = useCallback((e) => {\r\n        setPasswordError(e.target.value !== password);\r\n        setPasswordCheck(e.target.value);\r\n    }, [password]);\r\n\r\n    const onChangeTerm = useCallback((e) => {\r\n        setTerm(e.target.checked);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        term && setTermError(false);\r\n    }, [term]);\r\n\r\n    return(\r\n        <>\r\n            <Form onSubmit = {onSubmit} style={{padding : 10}}>\r\n                {/* <TextInput value=\"135135\" /> */}\r\n                <div>\r\n                    <label htmlFor=\"user-id\">USER ID</label>\r\n                    <br/>\r\n                    <Input name=\"user-id\" value={id} required onChange={onChangeId}/>\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"user-nick\">USER Nickname</label>\r\n                    <br/>\r\n                    <Input name=\"user-nick\" value={nick} required onChange={onChangeNick}/>\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"user-password\">USER Password</label>\r\n                    <br/>\r\n                    <Input name=\"user-password\" type=\"password\" value={password} required onChange = {onChangePassword}/>\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"user-password-check\">USER Password check</label>\r\n                    <br/>\r\n                    <Input name=\"user-password-check\" type=\"password\"  value={passwordCheck} required onChange = {onChangePasswordCheck}/>\r\n                    {passwordError && <div style={{color : 'red'}}> 비밀번호가 일치하지 않습니다 </div>}\r\n                </div>\r\n                <div style={{marginTop : 10}}>\r\n                    <Checkbox name=\"user-term\" checked={term} onChange={onChangeTerm}>ok?</Checkbox>\r\n                    {termError && <div style={{color : 'red'}}>약관에 동의하셔야 합니다</div>}\r\n                </div>\r\n                <div style={{marginTop : 10}}>\r\n                    <Button type=\"primary\" htmlType=\"submit\" //loading = {isSigningUp}\r\n                    >SIGN UP</Button>\r\n                </div>\r\n            </Form>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SingUp;"]},"metadata":{},"sourceType":"module"}