{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PostCard from '../components/PostCard';\nimport { Avatar, Card } from 'antd';\nimport { LOAD_USER_REQUEST } from '../reducers/user';\nimport { LOAD_USER_POST_REQUEST } from '../reducers/post';\n\nconst User = ({\n  id\n}) => {\n  const dispatch = useDispatch();\n  const {\n    mainPosts\n  } = useSelector(state => state.post);\n  const {\n    userInfo\n  } = useSelector(state => state.user);\n  useEffect(() => {\n    dispatch({\n      type: LOAD_USER_REQUEST,\n      data: id\n    });\n    dispatch({\n      type: LOAD_USER_POST_REQUEST,\n      data: id\n    });\n  }, []);\n  return __jsx(\"div\", null, userInfo ? __jsx(Card, {\n    actions: [__jsx(\"div\", {\n      key: \"twit\"\n    }, \"\\uC9F9\\uC9F9 \", __jsx(\"br\", null), \" \", userInfo.Posts, \" \"), __jsx(\"div\", {\n      key: \"following\"\n    }, \"\\uD314\\uB85C\\uC789 \", __jsx(\"br\", null), \" \", userInfo.Followings, \" \"), __jsx(\"div\", {\n      key: \"follower\"\n    }, \"\\uD314\\uB85C\\uC6CC \", __jsx(\"br\", null), \" \", userInfo.Followers, \" \")]\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, null, userInfo.nickname[0]),\n    title: userInfo.nickname\n  })) : null, mainPosts.map(c => __jsx(PostCard, {\n    key: +c.createdAt,\n    post: c\n  })));\n};\n\nUser.propTypes = {\n  id: PropTypes.number.isRequired\n};\n\nUser.getInitialProps = async context => {\n  console.log('User getInitialProps', context.query.id);\n  return {\n    id: parseInt(context.query.id, 10)\n  };\n};\n\nexport default User;","map":{"version":3,"sources":["C:/project/nodebird/front/pages/user.js"],"names":["React","useEffect","PropTypes","useDispatch","useSelector","PostCard","Avatar","Card","LOAD_USER_REQUEST","LOAD_USER_POST_REQUEST","User","id","dispatch","mainPosts","state","post","userInfo","user","type","data","Posts","Followings","Followers","nickname","map","c","createdAt","propTypes","number","isRequired","getInitialProps","context","console","log","query","parseInt"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,MAA7B;AACA,SAASC,iBAAT,QAAkC,kBAAlC;AACA,SAASC,sBAAT,QAAuC,kBAAvC;;AAEA,MAAMC,IAAI,GAAG,CAAE;AAACC,EAAAA;AAAD,CAAF,KAAY;AACrB,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAM;AAAEU,IAAAA;AAAF,MAAgBT,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACC,IAAhB,CAAjC;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAeZ,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACG,IAAhB,CAAhC;AAEAhB,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,QAAQ,CAAC;AACLM,MAAAA,IAAI,EAAGV,iBADF;AAELW,MAAAA,IAAI,EAAGR;AAFF,KAAD,CAAR;AAIAC,IAAAA,QAAQ,CAAE;AACNM,MAAAA,IAAI,EAAGT,sBADD;AAENU,MAAAA,IAAI,EAAGR;AAFD,KAAF,CAAR;AAIH,GATQ,EASN,EATM,CAAT;AAWA,SACI,mBACMK,QAAQ,GACF,MAAC,IAAD;AACA,IAAA,OAAO,EAAI,CACP;AAAK,MAAA,GAAG,EAAC;AAAT,wBAAmB,iBAAnB,OAA0BA,QAAQ,CAACI,KAAnC,MADO,EAEP;AAAK,MAAA,GAAG,EAAC;AAAT,8BAAyB,iBAAzB,OAAgCJ,QAAQ,CAACK,UAAzC,MAFO,EAGP;AAAK,MAAA,GAAG,EAAC;AAAT,8BAAwB,iBAAxB,OAA+BL,QAAQ,CAACM,SAAxC,MAHO;AADX,KAMA,MAAC,IAAD,CAAM,IAAN;AACI,IAAA,MAAM,EAAI,MAAC,MAAD,QAASN,QAAQ,CAACO,QAAT,CAAkB,CAAlB,CAAT,CADd;AAEI,IAAA,KAAK,EAAIP,QAAQ,CAACO;AAFtB,IANA,CADE,GAaJ,IAdV,EAeMV,SAAS,CAACW,GAAV,CAAcC,CAAC,IACb,MAAC,QAAD;AAAU,IAAA,GAAG,EAAI,CAACA,CAAC,CAACC,SAApB;AAA+B,IAAA,IAAI,EAAID;AAAvC,IADF,CAfN,CADJ;AAqBH,CArCD;;AAuCAf,IAAI,CAACiB,SAAL,GAAiB;AACbhB,EAAAA,EAAE,EAAGT,SAAS,CAAC0B,MAAV,CAAiBC;AADT,CAAjB;;AAIAnB,IAAI,CAACoB,eAAL,GAAuB,MAAOC,OAAP,IAAmB;AACtCC,EAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCF,OAAO,CAACG,KAAR,CAAcvB,EAAlD;AACA,SAAO;AAAEA,IAAAA,EAAE,EAAGwB,QAAQ,CAACJ,OAAO,CAACG,KAAR,CAAcvB,EAAf,EAAoB,EAApB;AAAf,GAAP;AACH,CAHD;;AAKA,eAAeD,IAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport PostCard from '../components/PostCard';\r\nimport { Avatar, Card } from 'antd';\r\nimport { LOAD_USER_REQUEST } from '../reducers/user';\r\nimport { LOAD_USER_POST_REQUEST } from '../reducers/post';\r\n\r\nconst User = ( {id} ) => {\r\n    const dispatch = useDispatch();\r\n    const { mainPosts } = useSelector(state => state.post);\r\n    const { userInfo } = useSelector(state => state.user);\r\n\r\n    useEffect(() => {\r\n        dispatch({\r\n            type : LOAD_USER_REQUEST,\r\n            data : id,\r\n        });\r\n        dispatch ({\r\n            type : LOAD_USER_POST_REQUEST,\r\n            data : id,\r\n        });\r\n    }, []);\r\n\r\n    return(\r\n        <div>\r\n            { userInfo\r\n                ? ( <Card\r\n                    actions = {[\r\n                        <div key=\"twit\">짹짹 <br/> {userInfo.Posts} </div>,\r\n                        <div key=\"following\">팔로잉 <br/> {userInfo.Followings} </div>,\r\n                        <div key=\"follower\">팔로워 <br/> {userInfo.Followers} </div>,\r\n                    ]}>\r\n                    <Card.Meta\r\n                        avatar = {<Avatar>{userInfo.nickname[0]}</Avatar>}\r\n                        title = {userInfo.nickname}\r\n                    />\r\n                </Card>\r\n                )\r\n                : null}\r\n            { mainPosts.map(c => (\r\n                <PostCard key = {+c.createdAt} post = {c} />\r\n            )) }\r\n        </div>\r\n    );\r\n};\r\n\r\nUser.propTypes = {\r\n    id : PropTypes.number.isRequired,\r\n}\r\n\r\nUser.getInitialProps = async (context) => {\r\n    console.log('User getInitialProps', context.query.id);\r\n    return { id : parseInt(context.query.id , 10) }\r\n};\r\n\r\nexport default User;"]},"metadata":{},"sourceType":"module"}