{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { LOAD_HASHTAG_POSTS_REQUEST } from '../reducers/post';\nimport PostCard from '../components/PostCard';\n\nvar HashTag = function HashTag(_ref) {\n  var tag = _ref.tag;\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector.mainPosts;\n\n  useEffect(function () {\n    dispatch({\n      type: LOAD_HASHTAG_POSTS_REQUEST,\n      data: tag\n    });\n  }, []);\n  return __jsx(\"div\", null, mainPosts.map(function (c) {\n    return __jsx(PostCard, {\n      key: +c.createdAt,\n      post: c\n    });\n  }));\n};\n\nHashTag.propTypes = {\n  tag: PropTypes.string.isRequired\n}; // getInitialProps = 이건 method가 하나 생긴다! 얘는 context라는 매개변수를 받는다 이거 사용하려면 _app.js에서 nodebird getinitialProps를 사용해야한다\n\nHashTag.getInitialProps = function _callee(context) {\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          console.log('hashtag getInitialProps', context.query.tag);\n          return _context.abrupt(\"return\", {\n            tag: context.query.tag\n          });\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default HashTag;","map":{"version":3,"sources":["C:/project/nodebird/front/pages/hashtag.js"],"names":["React","useEffect","PropTypes","useDispatch","useSelector","LOAD_HASHTAG_POSTS_REQUEST","PostCard","HashTag","tag","dispatch","state","post","mainPosts","type","data","map","c","createdAt","propTypes","string","isRequired","getInitialProps","context","console","log","query"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,0BAAT,QAA2C,kBAA3C;AACA,OAAOC,QAAP,MAAqB,wBAArB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAAa;AAAA,MAAVC,GAAU,QAAVA,GAAU;AACzB,MAAMC,QAAQ,GAAGN,WAAW,EAA5B;;AADyB,qBAEHC,WAAW,CAAC,UAAAM,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAV;AAAA,GAAN,CAFR;AAAA,MAEjBC,SAFiB,gBAEjBA,SAFiB;;AAIzBX,EAAAA,SAAS,CAAC,YAAM;AACZQ,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAGR,0BADF;AAELS,MAAAA,IAAI,EAAGN;AAFF,KAAD,CAAR;AAIH,GALQ,EAKN,EALM,CAAT;AAOA,SACI,mBACKI,SAAS,CAACG,GAAV,CAAc,UAAAC,CAAC;AAAA,WACZ,MAAC,QAAD;AAAU,MAAA,GAAG,EAAE,CAACA,CAAC,CAACC,SAAlB;AAA6B,MAAA,IAAI,EAAED;AAAnC,MADY;AAAA,GAAf,CADL,CADJ;AAOH,CAlBD;;AAoBAT,OAAO,CAACW,SAAR,GAAoB;AAChBV,EAAAA,GAAG,EAAGN,SAAS,CAACiB,MAAV,CAAiBC;AADP,CAApB,C,CAIA;;AACAb,OAAO,CAACc,eAAR,GAA0B,iBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AACtBC,UAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCF,OAAO,CAACG,KAAR,CAAcjB,GAArD;AADsB,2CAEf;AAAEA,YAAAA,GAAG,EAAGc,OAAO,CAACG,KAAR,CAAcjB;AAAtB,WAFe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA1B;;AAKA,eAAeD,OAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { LOAD_HASHTAG_POSTS_REQUEST } from '../reducers/post';\r\nimport PostCard from '../components/PostCard';\r\n\r\nconst HashTag = ( {tag} ) => {\r\n    const dispatch = useDispatch();\r\n    const { mainPosts } = useSelector(state => state.post);\r\n\r\n    useEffect(() => {\r\n        dispatch({\r\n            type : LOAD_HASHTAG_POSTS_REQUEST,\r\n            data : tag,\r\n        });\r\n    }, []);\r\n\r\n    return(\r\n        <div>\r\n            {mainPosts.map(c => (\r\n                <PostCard key={+c.createdAt} post={c} />\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nHashTag.propTypes = {\r\n    tag : PropTypes.string.isRequired,\r\n};\r\n\r\n// getInitialProps = 이건 method가 하나 생긴다! 얘는 context라는 매개변수를 받는다 이거 사용하려면 _app.js에서 nodebird getinitialProps를 사용해야한다\r\nHashTag.getInitialProps = async (context) => {\r\n    console.log('hashtag getInitialProps', context.query.tag);\r\n    return { tag : context.query.tag };\r\n};\r\n\r\nexport default HashTag;"]},"metadata":{},"sourceType":"module"}