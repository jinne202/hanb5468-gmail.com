{"ast":null,"code":"import { all, fork, takeLatest, delay, put } from 'redux-saga/effects';\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE } from '../reducers/post';\n\nfunction addPostAPI() {}\n\nfunction* addPost() {\n  try {\n    //yield call(signUpAPI);\n    yield delay(2000);\n    yield put({\n      type: ADD_POST_SUCCESS\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: ADD_POST_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction addCommentAPI() {}\n\nfunction* addComment(action) {\n  try {\n    //yield call(signUpAPI);\n    yield delay(2000);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: {\n        postId: action.data.postId\n      }\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchAddComment)]);\n}","map":{"version":3,"sources":["C:/project/nodebird/front/sagas/post.js"],"names":["all","fork","takeLatest","delay","put","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","addPostAPI","addPost","type","e","console","error","watchAddPost","addCommentAPI","addComment","action","data","postId","watchAddComment","postSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,UAApB,EAAgCC,KAAhC,EAAuCC,GAAvC,QAAkD,oBAAlD;AACA,SAASC,gBAAT,EAA2BC,gBAA3B,EAA6CC,gBAA7C,EAA+DC,mBAA/D,EAAoFC,mBAApF,EAAyGC,mBAAzG,QAAoI,kBAApI;;AAEA,SAASC,UAAT,GAAqB,CAEpB;;AAED,UAAUC,OAAV,GAAmB;AACf,MAAI;AACA;AACA,UAAMT,KAAK,CAAC,IAAD,CAAX;AACA,UAAMC,GAAG,CAAC;AACNS,MAAAA,IAAI,EAAGP;AADD,KAAD,CAAT;AAGH,GAND,CAME,OAAOQ,CAAP,EAAU;AACRC,IAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACA,UAAMV,GAAG,CAAC;AACNS,MAAAA,IAAI,EAAGN,gBADD;AAENS,MAAAA,KAAK,EAAGF;AAFF,KAAD,CAAT;AAIH;AACJ;;AAED,UAAUG,YAAV,GAAwB;AACpB,QAAMf,UAAU,CAACG,gBAAD,EAAmBO,OAAnB,CAAhB;AACH;;AAED,SAASM,aAAT,GAAwB,CAEvB;;AAED,UAAUC,UAAV,CAAqBC,MAArB,EAA4B;AACxB,MAAI;AACA;AACA,UAAMjB,KAAK,CAAC,IAAD,CAAX;AACA,UAAMC,GAAG,CAAC;AACNS,MAAAA,IAAI,EAAGJ,mBADD;AAENY,MAAAA,IAAI,EAAG;AACHC,QAAAA,MAAM,EAAGF,MAAM,CAACC,IAAP,CAAYC;AADlB;AAFD,KAAD,CAAT;AAMH,GATD,CASE,OAAOR,CAAP,EAAU;AACRC,IAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACA,UAAMV,GAAG,CAAC;AACNS,MAAAA,IAAI,EAAGH,mBADD;AAENM,MAAAA,KAAK,EAAGF;AAFF,KAAD,CAAT;AAIH;AACJ;;AAED,UAAUS,eAAV,GAA2B;AACvB,QAAMrB,UAAU,CAACM,mBAAD,EAAsBW,UAAtB,CAAhB;AACH;;AAGD,eAAe,UAAUK,QAAV,GAAoB;AAC/B,QAAMxB,GAAG,CAAE,CACPC,IAAI,CAACgB,YAAD,CADG,EAEPhB,IAAI,CAACsB,eAAD,CAFG,CAAF,CAAT;AAIH","sourcesContent":["import { all, fork, takeLatest, delay, put } from 'redux-saga/effects'\r\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE } from '../reducers/post';\r\n\r\nfunction addPostAPI(){\r\n\r\n}\r\n\r\nfunction* addPost(){\r\n    try {\r\n        //yield call(signUpAPI);\r\n        yield delay(2000);\r\n        yield put({\r\n            type : ADD_POST_SUCCESS,\r\n        });\r\n    } catch (e) {\r\n        console.error(e);\r\n        yield put({\r\n            type : ADD_POST_FAILURE,\r\n            error : e,\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchAddPost(){\r\n    yield takeLatest(ADD_POST_REQUEST, addPost);\r\n}\r\n\r\nfunction addCommentAPI(){\r\n\r\n}\r\n\r\nfunction* addComment(action){\r\n    try {\r\n        //yield call(signUpAPI);\r\n        yield delay(2000);\r\n        yield put({\r\n            type : ADD_COMMENT_SUCCESS,\r\n            data : {\r\n                postId : action.data.postId,\r\n            },\r\n        });\r\n    } catch (e) {\r\n        console.error(e);\r\n        yield put({\r\n            type : ADD_COMMENT_FAILURE,\r\n            error : e,\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchAddComment(){\r\n    yield takeLatest(ADD_COMMENT_REQUEST, addComment);\r\n}\r\n\r\n\r\nexport default function* postSaga(){\r\n    yield all ([\r\n        fork(watchAddPost),\r\n        fork(watchAddComment),\r\n    ]);\r\n}"]},"metadata":{},"sourceType":"module"}