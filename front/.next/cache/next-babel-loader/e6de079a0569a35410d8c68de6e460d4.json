{"ast":null,"code":"import { all, fork, takeEvery, put, delay } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { LOG_IN_SUCCESS, LOG_IN_FAILURE, SIGN_UP_REQUEST, LOG_IN_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE } from '../reducers/user';\n\nfunction loginAPI() {\n  // 서버에 요청을 보내는 부분\n  return axios.post('/login');\n}\n\nfunction* login() {\n  try {\n    //yield call(loginAPI);\n    yield delay(2000);\n    yield put({\n      type: LOG_IN_SUCCESS\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: LOG_IN_FAILURE\n    });\n  }\n}\n\nfunction* watchLogin() {\n  yield takeEvery(LOG_IN_REQUEST, login);\n}\n\nfunction sighUpAPI() {}\n\nfunction* signUp() {\n  try {\n    //yield call(signUpAPI);\n    yield put({\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: SIGN_UP_FAILURE\n    });\n  }\n}\n\nfunction* watchSignUp() {\n  yield takeEvery(SIGN_UP_REQUEST, signUp);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogin), fork(watchSignUp)]);\n}","map":{"version":3,"sources":["C:/project/nodebird/front/sagas/user.js"],"names":["all","fork","takeEvery","put","delay","axios","LOG_IN_SUCCESS","LOG_IN_FAILURE","SIGN_UP_REQUEST","LOG_IN_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","loginAPI","post","login","type","e","console","error","watchLogin","sighUpAPI","signUp","watchSignUp","userSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,SAApB,EAA+BC,GAA/B,EAAoCC,KAApC,QAAiD,oBAAjD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,EAAyBC,cAAzB,EAAyCC,eAAzC,EAA0DC,cAA1D,EAA0EC,eAA1E,EAA2FC,eAA3F,QAAkH,kBAAlH;;AAEA,SAASC,QAAT,GAAmB;AACf;AACA,SAAOP,KAAK,CAACQ,IAAN,CAAW,QAAX,CAAP;AACH;;AAED,UAAUC,KAAV,GAAiB;AACb,MAAI;AACA;AACA,UAAMV,KAAK,CAAC,IAAD,CAAX;AACA,UAAMD,GAAG,CAAC;AACNY,MAAAA,IAAI,EAAGT;AADD,KAAD,CAAT;AAGH,GAND,CAME,OAAOU,CAAP,EAAU;AACRC,IAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACA,UAAMb,GAAG,CAAC;AACNY,MAAAA,IAAI,EAAGR;AADD,KAAD,CAAT;AAGH;AACJ;;AAED,UAAUY,UAAV,GAAsB;AAClB,QAAMjB,SAAS,CAACO,cAAD,EAAiBK,KAAjB,CAAf;AACH;;AAED,SAASM,SAAT,GAAoB,CAEnB;;AAED,UAAUC,MAAV,GAAkB;AACd,MAAI;AACA;AACA,UAAMlB,GAAG,CAAC;AACNY,MAAAA,IAAI,EAAGL;AADD,KAAD,CAAT;AAGH,GALD,CAKE,OAAOM,CAAP,EAAU;AACRC,IAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACA,UAAMb,GAAG,CAAC;AACNY,MAAAA,IAAI,EAAGJ;AADD,KAAD,CAAT;AAGH;AACJ;;AAED,UAAUW,WAAV,GAAuB;AACnB,QAAMpB,SAAS,CAACM,eAAD,EAAkBa,MAAlB,CAAf;AACH;;AAED,eAAe,UAAUE,QAAV,GAAoB;AAC/B,QAAMvB,GAAG,CAAE,CACPC,IAAI,CAACkB,UAAD,CADG,EAEPlB,IAAI,CAACqB,WAAD,CAFG,CAAF,CAAT;AAIH","sourcesContent":["import { all, fork, takeEvery, put, delay } from 'redux-saga/effects';\r\nimport axios from 'axios'\r\nimport { LOG_IN_SUCCESS, LOG_IN_FAILURE, SIGN_UP_REQUEST, LOG_IN_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE } from '../reducers/user';\r\n\r\nfunction loginAPI(){\r\n    // 서버에 요청을 보내는 부분\r\n    return axios.post('/login')\r\n}\r\n\r\nfunction* login(){\r\n    try {\r\n        //yield call(loginAPI);\r\n        yield delay(2000);\r\n        yield put({\r\n            type : LOG_IN_SUCCESS,\r\n        });\r\n    } catch (e) {\r\n        console.error(e);\r\n        yield put({\r\n            type : LOG_IN_FAILURE,\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchLogin(){\r\n    yield takeEvery(LOG_IN_REQUEST, login);\r\n}\r\n\r\nfunction sighUpAPI(){\r\n\r\n}\r\n\r\nfunction* signUp(){\r\n    try {\r\n        //yield call(signUpAPI);\r\n        yield put({\r\n            type : SIGN_UP_SUCCESS,\r\n        });\r\n    } catch (e) {\r\n        console.error(e);\r\n        yield put({\r\n            type : SIGN_UP_FAILURE,\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchSignUp(){\r\n    yield takeEvery(SIGN_UP_REQUEST, signUp);\r\n}\r\n\r\nexport default function* userSaga(){\r\n    yield all ([\r\n        fork(watchLogin),\r\n        fork(watchSignUp),\r\n    ]);\r\n}"]},"metadata":{},"sourceType":"module"}