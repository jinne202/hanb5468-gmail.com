{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport var initialState = {\n  mainPosts: [{\n    User: {\n      id: 1,\n      nickname: 'JINNE'\n    },\n    content: '>_<',\n    img: '',\n    Comments: []\n  }],\n  imagePaths: [],\n  addPostErrorReason: false,\n  //포스트 업로드 실패 사유\n  isAddingPost: false,\n  //포스트 업로드 중\n  postAdded: false,\n  //포스트 업로드 성공\n  isAddingComment: false,\n  addCommentErrorReason: '',\n  commentAdded: false\n};\nvar dummyPost = {\n  id: 2,\n  User: {\n    id: 1,\n    nickname: 'JINNE'\n  },\n  content: '레드벨벳 - 덤덤!',\n  Comments: []\n};\nvar dummyComment = {\n  id: 1,\n  User: {\n    id: 1,\n    nickname: 2\n  },\n  createdAt: new Date(),\n  content: '덤덤덤덤덤덤덤ㄷ멈 덤덤덤덤 깁미깁미댓'\n};\nexport var LOAD_MAIN_POST_REQUEST = 'LOAD_MAIN_POST_REQUEST';\nexport var LOAD_MAIN_POST_SUCCESS = 'LOAD_MAIN_POST_SUCCESS';\nexport var LOAD_MAIN_POST_FAILURE = 'LOAD_MAIN_POST_FAILURE';\nexport var LOAD_HASHTAG_POSTS_REQUEST = 'LOAD_HASHTAG_POSTS_REQUEST';\nexport var LOAD_HASHTAG_POSTS_SUCCESS = 'LOAD_HASHTAG_POSTS_SUCCESS';\nexport var LOAD_HASHTAG_POSTS_FAILURE = 'LOAD_HASHTAG_POSTS_FAILURE';\nexport var LOAD_USER_POST_REQUEST = 'LOAD_USER_POST_REQUEST';\nexport var LOAD_USER_POST_SUCCESS = 'LOAD_USER_POST_SUCCESS';\nexport var LOAD_USER_POST_FAILURE = 'LOAD_USER_POST_FAILURE';\nexport var UPLOAD_IMAGE_REQUEST = 'UPLOAD_IMAGE_REQUEST';\nexport var UPLOAD_IMAGE_SUCCESS = 'UPLOAD_IMAGE_SUCCESS';\nexport var UPLOAD_IMAGE_FAILURE = 'UPLOAD_IMAGE_FAILURE';\nexport var REMOVE_IMAGE = 'REMOVE_IMAGE';\nexport var ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport var ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport var ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport var LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\nexport var LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\nexport var LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\nexport var UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\nexport var UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\nexport var UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\nexport var ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport var ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport var ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\nexport var LOAD_COMMENT_REQUEST = 'LOAD_COMMENT_REQUEST';\nexport var LOAD_COMMENT_SUCCESS = 'LOAD_COMMENT_SUCCESS';\nexport var LOAD_COMMENT_FAILURE = 'LOAD_COMMENT_FAILURE';\nexport var RETWEET_REQUEST = 'RETWEET_REQUEST';\nexport var RETWEET_SUCCESS = 'RETWEET_SUCCESS';\nexport var RETWEET_FAILURE = 'RETWEET_FAILURE';\nexport var REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport var REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport var REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\nvar addPost = {\n  type: ADD_POST_REQUEST\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_POST_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isAddingPost: true,\n          addPostErrorReason: '',\n          postAdded: false\n        });\n      }\n\n    case ADD_POST_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          isAddingPost: false,\n          mainPosts: [action.data].concat(_toConsumableArray(state.mainPosts)),\n          postAdded: true\n        });\n      }\n\n    case ADD_POST_FAILURE:\n      {\n        return _objectSpread({}, state, {\n          isAddingPost: false,\n          addPostErrorReason: action.error\n        });\n      }\n\n    case ADD_COMMENT_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isAddingComment: true,\n          addCommentErrorReason: '',\n          commentAdded: false\n        });\n      }\n\n    case ADD_COMMENT_SUCCESS:\n      {\n        var postIndex = state.mainPosts.findIndex(function (v) {\n          return v.id === action.data.postId;\n        });\n        var post = state.mainPosts[postIndex];\n        var Comments = [].concat(_toConsumableArray(post.Comments), [dummyComment]);\n\n        var mainPosts = _toConsumableArray(state.mainPosts);\n\n        mainPosts[postIndex] = _objectSpread({}, post, {\n          Comments: Comments\n        });\n        return _objectSpread({}, state, {\n          isAddingComment: false,\n          mainPosts: mainPosts,\n          commentAdded: true\n        });\n      }\n\n    case ADD_COMMENT_FAILURE:\n      {\n        return _objectSpread({}, state, {\n          isAddingComment: false,\n          addCommentErrorReason: action.error\n        });\n      }\n\n    case LOAD_MAIN_POST_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          mainPosts: []\n        });\n      }\n\n    case LOAD_MAIN_POST_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          mainPosts: action.data\n        });\n      }\n\n    case LOAD_MAIN_POST_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/project/nodebird/front/reducers/post.js"],"names":["initialState","mainPosts","User","id","nickname","content","img","Comments","imagePaths","addPostErrorReason","isAddingPost","postAdded","isAddingComment","addCommentErrorReason","commentAdded","dummyPost","dummyComment","createdAt","Date","LOAD_MAIN_POST_REQUEST","LOAD_MAIN_POST_SUCCESS","LOAD_MAIN_POST_FAILURE","LOAD_HASHTAG_POSTS_REQUEST","LOAD_HASHTAG_POSTS_SUCCESS","LOAD_HASHTAG_POSTS_FAILURE","LOAD_USER_POST_REQUEST","LOAD_USER_POST_SUCCESS","LOAD_USER_POST_FAILURE","UPLOAD_IMAGE_REQUEST","UPLOAD_IMAGE_SUCCESS","UPLOAD_IMAGE_FAILURE","REMOVE_IMAGE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","LOAD_COMMENT_REQUEST","LOAD_COMMENT_SUCCESS","LOAD_COMMENT_FAILURE","RETWEET_REQUEST","RETWEET_SUCCESS","RETWEET_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","addPost","type","reducer","state","action","data","error","postIndex","findIndex","v","postId","post"],"mappings":"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","sourcesContent":["export const initialState = {\r\n    mainPosts : [{\r\n        User : {\r\n          id : 1,\r\n          nickname : 'JINNE',\r\n        },\r\n        content : '>_<',\r\n        img : '',\r\n        Comments: [],\r\n    }],\r\n    imagePaths : [],\r\n    addPostErrorReason : false , //포스트 업로드 실패 사유\r\n    isAddingPost : false, //포스트 업로드 중\r\n    postAdded : false, //포스트 업로드 성공\r\n    isAddingComment : false,\r\n    addCommentErrorReason : '',\r\n    commentAdded : false,\r\n};\r\n\r\nconst dummyPost = {\r\n    id : 2,\r\n    User : {\r\n        id : 1,\r\n        nickname : 'JINNE',\r\n    },\r\n    content : '레드벨벳 - 덤덤!',\r\n    Comments: [],\r\n}\r\n\r\nconst dummyComment = {\r\n    id : 1,\r\n    User : {\r\n        id : 1,\r\n        nickname : 2,\r\n    },\r\n    createdAt : new Date(),\r\n    content : '덤덤덤덤덤덤덤ㄷ멈 덤덤덤덤 깁미깁미댓'\r\n}\r\n\r\nexport const LOAD_MAIN_POST_REQUEST = 'LOAD_MAIN_POST_REQUEST';\r\nexport const LOAD_MAIN_POST_SUCCESS = 'LOAD_MAIN_POST_SUCCESS';\r\nexport const LOAD_MAIN_POST_FAILURE = 'LOAD_MAIN_POST_FAILURE';\r\n\r\nexport const LOAD_HASHTAG_POSTS_REQUEST = 'LOAD_HASHTAG_POSTS_REQUEST';\r\nexport const LOAD_HASHTAG_POSTS_SUCCESS = 'LOAD_HASHTAG_POSTS_SUCCESS';\r\nexport const LOAD_HASHTAG_POSTS_FAILURE = 'LOAD_HASHTAG_POSTS_FAILURE';\r\n\r\nexport const LOAD_USER_POST_REQUEST = 'LOAD_USER_POST_REQUEST';\r\nexport const LOAD_USER_POST_SUCCESS = 'LOAD_USER_POST_SUCCESS';\r\nexport const LOAD_USER_POST_FAILURE = 'LOAD_USER_POST_FAILURE';\r\n\r\nexport const UPLOAD_IMAGE_REQUEST = 'UPLOAD_IMAGE_REQUEST';\r\nexport const UPLOAD_IMAGE_SUCCESS = 'UPLOAD_IMAGE_SUCCESS';\r\nexport const UPLOAD_IMAGE_FAILURE = 'UPLOAD_IMAGE_FAILURE';\r\n\r\nexport const REMOVE_IMAGE = 'REMOVE_IMAGE'\r\n\r\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\r\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\r\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\r\n\r\nexport const LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\r\nexport const LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\r\nexport const LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\r\n\r\nexport const UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\r\nexport const UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\r\nexport const UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\r\n\r\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\r\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\r\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\r\n\r\nexport const LOAD_COMMENT_REQUEST = 'LOAD_COMMENT_REQUEST';\r\nexport const LOAD_COMMENT_SUCCESS = 'LOAD_COMMENT_SUCCESS';\r\nexport const LOAD_COMMENT_FAILURE = 'LOAD_COMMENT_FAILURE';\r\n\r\nexport const RETWEET_REQUEST = 'RETWEET_REQUEST';\r\nexport const RETWEET_SUCCESS = 'RETWEET_SUCCESS';\r\nexport const RETWEET_FAILURE = 'RETWEET_FAILURE';\r\n\r\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\r\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\r\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\r\n\r\n\r\nconst addPost = {\r\n    type : ADD_POST_REQUEST,\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type){\r\n        case ADD_POST_REQUEST : {\r\n            return {\r\n                ...state,\r\n                isAddingPost : true,\r\n                addPostErrorReason : '',\r\n                postAdded : false,\r\n            }\r\n        }\r\n        case ADD_POST_SUCCESS : {\r\n            return {\r\n                ...state,\r\n                isAddingPost : false,\r\n                mainPosts : [action.data, ...state.mainPosts],\r\n                postAdded : true,\r\n            }\r\n        }\r\n        case ADD_POST_FAILURE : {\r\n            return {\r\n                ...state,\r\n                isAddingPost : false,\r\n                addPostErrorReason : action.error,\r\n            }\r\n        }\r\n        case ADD_COMMENT_REQUEST : {\r\n            return {\r\n                ...state,\r\n                isAddingComment : true,\r\n                addCommentErrorReason : '',\r\n                commentAdded : false,\r\n            }\r\n        }\r\n\r\n        case ADD_COMMENT_SUCCESS : {\r\n            const postIndex = state.mainPosts.findIndex(v => v.id === action.data.postId);\r\n            const post = state.mainPosts[postIndex];\r\n            const Comments = [...post.Comments, dummyComment];\r\n            const mainPosts = [...state.mainPosts];\r\n            mainPosts[postIndex] = {...post, Comments};\r\n            return {\r\n                ...state,\r\n                isAddingComment : false,\r\n                mainPosts,\r\n                commentAdded : true,\r\n            }\r\n        }\r\n        case ADD_COMMENT_FAILURE : {\r\n            return {\r\n                ...state,\r\n                isAddingComment : false,\r\n                addCommentErrorReason : action.error,\r\n            }\r\n        }\r\n        case LOAD_MAIN_POST_REQUEST : {\r\n            return {\r\n                ...state,\r\n                mainPosts : [],\r\n            }\r\n        }\r\n        case LOAD_MAIN_POST_SUCCESS : {\r\n            return {\r\n                ...state,\r\n                mainPosts : action.data,\r\n            }\r\n        }\r\n        case LOAD_MAIN_POST_FAILURE : {\r\n            return {\r\n                ...state,\r\n            }\r\n        }\r\n        default : {\r\n            return {\r\n                ...state,\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}